# Since .env is gitignored, you can use .env.example to build a new `.env` file when you clone the repo.
# Keep this file up-to-date when you add new variables to \`.env\`.

# This file will be committed to version control, so make sure not to have any secrets in it.
# If you are cloning this repo, create a copy of this file named `.env` and populate it with your secrets.

# The database URL is used to connect to your Supabase database.
# DATABASE_URL='mongodb+srv://<username>:<password>@<cluster>/<database>?retryWrites=true&w=majority'
DATABASE_URL='postgresql://mvphubdb_owner:a8YQefqKGnx4@ep-rapid-sound-a1mvnkqc-pooler.ap-southeast-1.aws.neon.tech/mvphubdb?sslmode=require'

# You can generate the secret via 'openssl rand -base64 32' on Unix
# @see https://next-auth.js.org/configuration/options#secret
AUTH_SECRET='tempsecret'

# Preconfigured Discord OAuth provider, works out-of-the-box
# @see https://next-auth.js.org/providers/discord
AUTH_DISCORD_ID='1316085240589975724'
AUTH_DISCORD_SECRET='mQ17DV8-5xFuJ-g6TwP4heZF0lWaQ3Kl'

# In case you're using the Auth Proxy (apps/auth-proxy)
# AUTH_REDIRECT_PROXY_URL='https://auth.your-server.com/r'

# When deploying your application behind a reverse proxy,
# you'll need to set AUTH_TRUST_HOST equal to true
# @see https://authjs.dev/getting-started/deployment#auth_trust_host
AUTH_TRUST_HOST=true
